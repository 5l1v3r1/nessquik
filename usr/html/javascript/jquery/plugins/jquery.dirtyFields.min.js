(function($){$.fn.dirtyFields=function(parameters){var opts=$.extend({},$.fn.dirtyFields.defaults,parameters);return this.each(function(){var $targetElement=$(this);for(var dataName in opts)
{$targetElement.data(dataName,opts[dataName]);fieldArray=new Array();$targetElement.data("dirtyFields",fieldArray);}
$("input[type='text'],textarea",$targetElement).change(function(){var $elem=$(this);var $form=$elem.parents("form");var elemName=$elem.attr("name");var elemDirty=false;if(opts.trimText)
{var elemValue=jQuery.trim($elem.val());}
else
{var elemValue=$elem.val();}
if(elemValue!=$elem.data("startingValue"))
{$("label[for='"+elemName+"']",$form).addClass(opts.dirtyFieldClass);updateDirtyFieldsArray(elemName,$form,"dirty");elemDirty=true;}
else
{$("label[for='"+elemName+"']",$form).removeClass(opts.dirtyFieldClass);updateDirtyFieldsArray(elemName,$form,"clean");}
if($.isFunction(opts.fieldChanged))
{opts.fieldChanged.call($elem,elemDirty);}
if(opts.denoteFormDirty)
{updateFormStatus($elem.parents("form"),opts);}});$("select",$targetElement).change(function(){var $elem=$(this);var $form=$elem.parents("form");var elemName=$elem.attr("name");var elemDirty=false;if($elem.attr("multiple")&&opts.denoteChangedOptions)
{var optionsDirty=false;$elem.children("option").each(function(o){var $option=$(this);var isSelected=$option.attr("selected");if(isSelected!=$option.data("startingValue"))
{$option.addClass(opts.dirtyOptionClass);optionsDirty=true;}
else
{$option.removeClass(opts.dirtyOptionClass);}});if(optionsDirty)
{$("label[for='"+elemName+"']",$form).addClass(opts.dirtyFieldClass);updateDirtyFieldsArray(elemName,$form,"dirty");elemDirty=true;}
else
{$("label[for='"+elemName+"']",$form).removeClass(opts.dirtyFieldClass);updateDirtyFieldsArray(elemName,$form,"clean");}}
else
{if($elem.val()!=$elem.data("startingValue"))
{$("label[for='"+elemName+"']",$form).addClass(opts.dirtyFieldClass);updateDirtyFieldsArray(elemName,$form,"dirty");elemDirty=true;}
else
{$("label[for='"+elemName+"']",$form).removeClass(opts.dirtyFieldClass);updateDirtyFieldsArray(elemName,$form,"clean");}}
if($.isFunction(opts.fieldChanged))
{opts.fieldChanged.call($elem,elemDirty);}
if(opts.denoteFormDirty)
{updateFormStatus($elem.parents("form"),opts);}});$(":checkbox,:radio",$targetElement).change(function(){var $elem=$(this);var $form=$elem.parents("form");var elemName=$elem.attr("name");var elemDirty=false;var isChecked=$elem.attr("checked");if(isChecked!=$elem.data("startingValue"))
{updateCheckboxRadioElement($elem,"changed",$form,opts);elemDirty=true;}
else
{updateCheckboxRadioElement($elem,"unchanged",$form,opts);}
if($elem.attr("type")=='radio')
{$(":radio[name='"+elemName+"']",$form).each(function(r){var $thisRadio=$(this);var thisIsChecked=$thisRadio.attr("checked");if(thisIsChecked!=$thisRadio.data("startingValue"))
{updateCheckboxRadioElement($thisRadio,"changed",$form,opts);elemDirty=true;}
else
{updateCheckboxRadioElement($thisRadio,"unchanged",$form,opts);}});}
if(elemDirty)
{updateDirtyFieldsArray(elemName,$form,"dirty");}
else
{updateDirtyFieldsArray(elemName,$form,"clean");}
if($.isFunction(opts.fieldChanged))
{opts.fieldChanged.call($elem,elemDirty);}
if(opts.denoteFormDirty)
{updateFormStatus($elem.parents("form"),opts);}});$.fn.dirtyFields.setStartingValues($targetElement);});};$.fn.dirtyFields.defaults={dirtyFieldClass:"dirtyField",checkboxRadioTextTarget:"next span",denoteFormDirty:false,dirtyFormClass:"dirtyForm",denoteChangedOptions:false,dirtyOptionClass:"dirtyOption",trimText:false,formIsDirty:"",fieldChanged:""};$.fn.dirtyFields.resetForm=function($targetElement){$.fn.dirtyFields.setStartingValues($targetElement);var fieldArray=new Array();$targetElement.data("dirtyFields",fieldArray);$("."+$targetElement.data("dirtyFieldClass"),$targetElement).removeClass($targetElement.data("dirtyFieldClass"));if($targetElement.data("denoteChangedOptions"))
{$("."+$targetElement.data("dirtyOptionClass"),$targetElement).removeClass($targetElement.data("dirtyOptionClass"));}
if($targetElement.data("denoteFormDirty"))
{$targetElement.removeClass($targetElement.data("dirtyFormClass"));}};$.fn.dirtyFields.setStartingValues=function($targetElement){$("input[type='text'],select,:checkbox,:radio,textarea",$targetElement).each(function(i){$elem=$(this);if($elem.attr("type")=="radio"||$elem.attr("type")=="checkbox")
{if($elem.attr("checked"))
{$elem.data("startingValue",true);}
else
{$elem.data("startingValue",false);}}
else
{$elem.data("startingValue",$elem.val());}
if($elem.attr("multiple")&&$targetElement.data("denoteChangedOptions"))
{$elem.children("option").each(function(o){var $option=$(this);if($option.attr("selected"))
{$option.data("startingValue",true);}
else
{$option.data("startingValue",false);}});}});};function updateDirtyFieldsArray(elemName,$form,status){var dirtyFieldsArray=$form.data("dirtyFields");var index=$.inArray(elemName,dirtyFieldsArray);if(status=="dirty"&&index==-1)
{dirtyFieldsArray.push(elemName);$form.data("dirtyFields",dirtyFieldsArray);}
else if(status=="clean"&&index>-1)
{dirtyFieldsArray.splice(index,1);$form.data("dirtyFields",dirtyFieldsArray);}};function updateFormStatus($form,opts){if($("."+opts.dirtyFieldClass,$form).length>0)
{$form.addClass(opts.dirtyFormClass);if($.isFunction(opts.formIsDirty))
{opts.formIsDirty.call($form,true,$form.data("dirtyFields"));}}
else
{$form.removeClass(opts.dirtyFormClass);if($.isFunction(opts.formIsDirty))
{opts.formIsDirty.call($form,false,$form.data("dirtyFields"));}}};function updateCheckboxRadioElement($elem,status,$form,opts){var updateSettings=opts.checkboxRadioTextTarget;var updateSettingsArray=updateSettings.split(" ");switch(updateSettingsArray[0])
{case"next":if(status=="changed")
{$elem.next(updateSettingsArray[1]).addClass(opts.dirtyFieldClass);}
else
{$elem.next(updateSettingsArray[1]).removeClass(opts.dirtyFieldClass);}
break;case"previous":if(status=="changed")
{$elem.prev(updateSettingsArray[1]).addClass(opts.dirtyFieldClass);}
else
{$elem.prev(updateSettingsArray[1]).removeClass(opts.dirtyFieldClass);}
break;case"id":switch(updateSettingsArray[2])
{case"class":if(status=="changed")
{$("."+$elem.attr("id"),$form).addClass(opts.dirtyFieldClass);}
else
{$("."+$elem.attr("id"),$form).removeClass(opts.dirtyFieldClass);}
break;case"title":if(status=="changed")
{$("*[title='"+$elem.attr("id")+"']",$form).addClass(opts.dirtyFieldClass);}
else
{$("*[title='"+$elem.attr("id")+"']",$form).removeClass(opts.dirtyFieldClass);}
break;case"for":if(status=="changed")
{$("*[for='"+$elem.attr("id")+"']",$form).addClass(opts.dirtyFieldClass);}
else
{$("*[for='"+$elem.attr("id")+"']",$form).removeClass(opts.dirtyFieldClass);}
break;}
break;}};})(jQuery);